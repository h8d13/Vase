#!/bin/bash
# Script to set GRUB2 password protection with SHA-512 hashing
GRUB_CFG="/boot/grub/grub.cfg"

if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root (use sudo)"
    exit 1
fi
# Get the original user who invoked sudo
GRUB_USER=${SUDO_USER:-$USER}

echo "Setting GRUB password for user: $GRUB_USER"

# Password input with confirmation and retry
while true; do
    echo "Enter password (will not echo):"
    read -sr PASSWORD
    echo
    echo "Confirm password:"
    read -sr PASSWORD_CONFIRM
    echo

    if [[ "$PASSWORD" == "$PASSWORD_CONFIRM" ]]; then
        break
    else
        echo "Passwords don't match! Try again."
        echo
    fi
done

# Generate SHA-512 hash using grub-mkpasswd-pbkdf2
echo "Generating SHA-512 password hash..."
HASH=$(echo -e "$PASSWORD\n$PASSWORD" | grub-mkpasswd-pbkdf2 2>/dev/null | grep "PBKDF2 hash" | sed 's/.*is //')

if [[ -z "$HASH" ]]; then
    echo "Error: Failed to generate password hash"
    exit 1
fi
# Append password configuration to 40_custom
cat >> /etc/grub.d/40_custom << EOF

# GRUB password protection
set superusers="root $GRUB_USER"
password_pbkdf2 $GRUB_USER $HASH
EOF

echo "Password configuration added to 40_custom"
echo "Regenerating GRUB configuration..."
grub-mkconfig -o $GRUB_CFG

echo "Done! Password set for user: $GRUB_USER"
