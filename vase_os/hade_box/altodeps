#!/bin/bash
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
. "$SCRIPT_DIR/../../util_f"
# Source constants if they exist
if file_ex "$SCRIPT_DIR/../../..."; then
    . "$SCRIPT_DIR/../../..."
fi

# ARCHINSTALL SYSTEM SUBDEPS SCRIPT
PACKAGES=(
    # Required (core features)
    "git"
    "arch-install-scripts"
    "grub"
    "mkinitcpio"
    "pciutils"
    "dosfstools"
    # Optional (depending on options picked in archinstall)
    "btrfs-progs"
    #"cryptsetup"
    #"libfido2"
    # Core (sanity check)
    "coreutils"
    "e2fsprogs"
    "glibc"
    "shadow"
    "systemd"
    "util-linux"
    "python"
)

MISSING=()

# reliable hacky way of knowing we are using ISO
if [ -d "/run/archiso" ]; then
    preop "Running from Arch Linux ISO / USB Medium"
else
    preop "Running from live system"
    preop "Cheching system subdeps"
    for pkg in "${PACKAGES[@]}"; do
        if pacman -Qi "$pkg" &>/dev/null; then
            version=$(pacman -Qi "$pkg" | grep "^Version" | awk '{print $3}')
            preop "Found: $pkg ($version)"
        else
            postop "Missing: $pkg"
            MISSING+=("$pkg")
        fi
    done
fi

# Always check python modules even tho they should be in ISO
PYTHON_MODULES=(
    "cryptography:python-cryptography"
    "parted:python-pyparted"
    "pydantic:python-pydantic"
)

for module_pkg in "${PYTHON_MODULES[@]}"; do
    module="${module_pkg%%:*}"
    package="${module_pkg##*:}"
    if python -c "import $module" 2>/dev/null; then
        version=$(pacman -Qi "$package" 2>/dev/null | grep "^Version" | awk '{print $3}')
        preop "Found: $package (${version:-unknown})"
    else
        postop "Missing: $package ($module)"
        MISSING+=("$package")
    fi
done

if [ ${#MISSING[@]} -gt 0 ]; then
    postop -e "\nInstall missing:\n ${elev_cmd} pacman -S ${MISSING[*]}"
    exit 1
else
    exit 0
fi
