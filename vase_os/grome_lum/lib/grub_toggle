#!/bin/bash
# Reusable function to toggle GRUB settings
grub_toggle() {
    local setting_name="$1"
    local enabled_value="$2"
    local disabled_value="$3"
    local description="$4"

    echo "=== $description ==="

    # Check current setting
    current_line=$(grep "^${setting_name}=" /etc/default/grub)
    commented_line=$(grep "^#${setting_name}=" /etc/default/grub)

    if [[ -z "$current_line" ]]; then
        if [[ -n "$commented_line" ]]; then
            # Setting is commented out - uncomment and set to enabled
            sed -i "s/^#${setting_name}=.*/${setting_name}=${enabled_value}/" /etc/default/grub
            echo "Status: Was commented out"
            echo "Action: Enabled with ${setting_name}=${enabled_value}"
        else
            # Setting doesn't exist - add it
            echo "${setting_name}=${enabled_value}" >> /etc/default/grub
            echo "Status: Not configured"
            echo "Action: Added ${setting_name}=${enabled_value}"
        fi
    else
        # Setting exists - toggle it
        current_value="${current_line#*=}"
        if [[ "$current_value" == "$enabled_value" ]]; then
            if [[ -n "$disabled_value" ]]; then
                sed -i "s/^${setting_name}=.*/${setting_name}=${disabled_value}/" /etc/default/grub
                echo "Status: ENABLED (${setting_name}=${enabled_value})"
                echo "Action: Changed to ${setting_name}=${disabled_value}"
            else
                # If no disabled value, comment it out
                sed -i "s/^${setting_name}=.*/#${setting_name}=${current_value}/" /etc/default/grub
                echo "Status: ENABLED (${setting_name}=${enabled_value})"
                echo "Action: Commented out"
            fi
        else
            sed -i "s/^${setting_name}=.*/${setting_name}=${enabled_value}/" /etc/default/grub
            echo "Status: DISABLED (${setting_name}=${current_value})"
            echo "Action: Changed to ${setting_name}=${enabled_value}"
        fi
    fi
}

# Check if commands requiring sudo are used without it
if [[ "$1" == "-a" ]] || [[ "$1" == "-s" ]] || [[ "$1" == "-r" ]] || ([[ "$1" == "-p" ]] && [[ -n "$2" ]] && ([[ "$2" == "-a" ]] || [[ "$2" == "-p" ]])) || ([[ "$1" == "-c" ]] && [[ -n "$2" ]] && ([[ "$2" == "-a" ]] || [[ "$2" == "-n" ]])); then
    if [[ $EUID -ne 0 ]]; then
        echo "Error: This command requires root privileges."
        exit 1
    fi
fi