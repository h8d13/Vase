#!/bin/bash
# pan_dora post-install optimizations for removable media
# Run after archinstall completes, inside the chroot environment
set -e

echo "[PAN_DORA] Applying removable media optimizations..."

# 1. Configure mkinitcpio for portable boot
echo "[PAN_DORA] Configuring mkinitcpio for portable boot..."
if [ -f /etc/mkinitcpio.conf ]; then
    # Move block and keyboard hooks BEFORE autodetect for hardware portability
    sed -i 's/^HOOKS=.*/HOOKS=(base udev block keyboard autodetect microcode modconf kms keymap consolefont filesystems fsck)/' /etc/mkinitcpio.conf

    # Regenerate initramfs
    mkinitcpio -P
    echo "[PAN_DORA] ✓ mkinitcpio configured for portable boot"
else
    echo "[PAN_DORA] ✗ /etc/mkinitcpio.conf not found"
fi

# 2. Configure GRUB for removable media (UEFI + BIOS)
echo "[PAN_DORA] Configuring GRUB for removable media..."

if [ -d /sys/firmware/efi ]; then
    # UEFI system - install with --removable flag
    if [ -d /boot/efi ]; then
        grub-install --target=x86_64-efi --efi-directory=/boot/efi --removable --recheck
        echo "[PAN_DORA] ✓ GRUB installed for UEFI with --removable flag"
    else
        echo "[PAN_DORA] ✗ /boot/efi not found, skipping UEFI GRUB install"
    fi
else
    # BIOS system
    # Device will be set by archinstall's GRUB config
    echo "[PAN_DORA] ℹ BIOS boot - GRUB already installed by archinstall"
fi

# Regenerate GRUB config
if command -v grub-mkconfig &>/dev/null; then
    grub-mkconfig -o /boot/grub/grub.cfg
    echo "[PAN_DORA] ✓ GRUB config regenerated"
fi

# #. Configure systemd journal to RAM (reduce writes)
echo "[PAN_DORA] Configuring systemd journal for volatile storage..."
mkdir -p /etc/systemd/journald.conf.d/
cat > /etc/systemd/journald.conf.d/usbstick.conf << 'EOF'
[Journal]
Storage=volatile
RuntimeMaxUse=30M
EOF
echo "[PAN_DORA] ✓ Journal configured for RAM storage (volatile)"

# 4. Optimize ext4 filesystem (disable journal if mounted)
echo "[PAN_DORA] Checking ext4 journal status..."
# Note: Journal can only be disabled when filesystem is unmounted
# This is informational - user must do this from live USB if desired
ROOT_DEV=$(findmnt -n -o SOURCE /)
if [[ "$ROOT_DEV" =~ ext4 ]]; then
    echo "[PAN_DORA] ℹ Root filesystem is ext4"
    echo "[PAN_DORA] ℹ To disable journal (reduces writes), boot from live USB and run:"
    echo "              tune2fs -O ^has_journal $ROOT_DEV"
    echo "              e2fsck -f $ROOT_DEV"
fi

# 5. Set BFQ scheduler for better USB performance
echo "[PAN_DORA] Configuring BFQ I/O scheduler..."
cat > /etc/udev/rules.d/60-ioschedulers.rules << 'EOF'
# Set BFQ scheduler for better performance on removable media
ACTION=="add|change", KERNEL=="sd[a-z]|mmcblk[0-9]*", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="bfq"
EOF
echo "[PAN_DORA] ✓ BFQ scheduler configured for SSDs/USB"

echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║  PAN_DORA Post-Install Complete!                          ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""
echo "Your removable media is now optimized for portable use."
echo ""
